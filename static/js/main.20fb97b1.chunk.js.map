{"version":3,"sources":["app/components/EventDetailDialog.js","app/components/Map.js","app/components/About/About.js","app/components/Events/Events.js","app/components/AddEventDialog.js","App.js","serviceWorker.js","index.js"],"names":["EventDetailDialog","props","handleClose","bind","Dialog","open","this","showDialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","location","src","photoUrl","alt","comment","DialogActions","Button","onClick","color","onCLose","React","Component","MyMapComponent","withScriptjs","withGoogleMap","defaultZoom","selectedLocation","center","lat","lng","defaultCenter","defaultZoomLat","defaultZoomLng","markers","Map","onMarkerClick","selectedLng","latLng","selectedLat","setState","selectedPlace","showingInfoWindow","state","activeMarker","eventsFromApi","locations","nextProps","nextState","nextContext","map","event","index","long","image_link","key","name","position","visible","style","width","maxWidth","googleMapURL","loadingElement","height","containerElement","className","mapElement","handleDialogClose","About","handleClickOpen","variant","size","DialogContentText","Events","eventID","toggle","onEventClick","eventItems","length","item","href","justifyContent","display","pagination","file_link","AddEventDialog","handleErrorToasterCLose","reason","errorToasterOpen","handleCommentChange","target","value","handleSelectClose","selectOpen","handleSelectOpen","handleSelectChange","district","handleSuccessToasterCLose","successToasterOpen","file","photoLoaded","photo","loading","handleCameraChange","handleLocation","handleSendClick","handleAddEventClose","TextField","autoFocus","margin","label","type","fullWidth","multiline","onChange","Grid","container","marginTop","xs","sm","md","InputLabel","accept","capture","ref","cameraFile","click","startIcon","Camera","marginRight","Select","labelId","onOpen","MenuItem","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","IconButton","aria-label","handleSucessToasterCLose","fileName","files","compressAccurately","then","res","navigator","geolocation","getCurrentPosition","console","log","coords","longitude","latitude","send","formData","FormData","append","Axios","post","resp","window","reload","catch","err","App","getApplications","pageNumber","backendUrl","urlStaged","replace","URL","searchParams","get","paginationObject","data","applications","history","pushState","pathname","selectedPosition","i","offline","addEventDialogOpen","selectedApplicationId","handleOpen","paginationComponent","activePage","current_page","itemsCountPerPage","totalItemsCount","total","pageRangeDisplayed","itemClass","linkClass","xl","URLSearchParams","search","set","newRelativePathQuery","toString","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20fb97b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// props:\r\n//   photo uri\r\n//   show or not show photo\r\n\r\nexport default class EventDetailDialog extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.showDialog}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n            >\r\n            <DialogTitle id={\"alert-dialog-title\"}>Photo Title</DialogTitle>\r\n            <DialogContent>\r\n                {this.props.location && <img src={this.props.photoUrl} alt=\"photo1\"/>}\r\n                <hr/>\r\n                {this.props.comment}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\">\r\n                    Закрыть\r\n                </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.onCLose();\r\n    }\r\n}","import React from \"react\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport EventDetailDialog from \"./EventDetailDialog\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n    <GoogleMap\r\n        defaultZoom={props.selectedLocation ? 12 : 8}\r\n        center={props.selectedLocation ? props.selectedLocation : {lat: 38.559547, lng: 68.757950}}\r\n        defaultCenter={{ lat: props.defaultZoomLat ? props.defaultZoomLat : 38.559547, lng: props.defaultZoomLng ? props.defaultZoomLng : 68.757950 }}\r\n    >\r\n        {props.markers}\r\n    </GoogleMap>));\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPlace: null,\r\n            activeMarker: null,\r\n            showingInfoWindow: false,\r\n            showDialog: false,\r\n            selectedLat: null,\r\n            selectedLng: null,\r\n            defaultZoomLat: this.props.selectedLocation && this.props.selectedLocation.lat,\r\n            defaultZoomLng: this.props.selectedLocation && this.props.selectedLocation.lng,\r\n            eventsFromApi: this.props.locations\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.selectedLocation){\r\n            this.setState({\r\n                selectedLng: props.selectedLocation.lng,\r\n                selectedLat: props.selectedLocation.lat,\r\n                showingInfoWindow: true\r\n            })\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        let locations = this.props.locations ? this.props.locations : [];\r\n        const markers = locations.map((event, index) => {\r\n            const { long, lat, comment, image_link } = event;\r\n            return (\r\n                <Marker\r\n                    key={index}\r\n                    name={\"fefe\"}\r\n                    position={{ lat, lng: long }}\r\n                    onClick={this.onMarkerClick}\r\n                >\r\n                    {(this.state.showingInfoWindow &&\r\n                        this.state.selectedLng === event.long &&\r\n                        this.state.selectedLat === event.lat\r\n                    ) &&\r\n                        <InfoWindow\r\n                            visible={this.state.showingInfoWindow}\r\n                            onClose={this.onClose}\r\n                        >\r\n                            <div style={{ width: '220px' }}>\r\n                                <p>\r\n                                    {comment}\r\n                                </p>\r\n                                <img src={image_link} alt=\"garbage\" style={{ maxWidth: '220px' }} />\r\n                                <hr />\r\n                                <Button color={\"primary\"}>\r\n                                    Подробнее\r\n                            </Button>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    }\r\n                </Marker>\r\n            );\r\n        });\r\n\r\n        // const MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n        //     <GoogleMap\r\n        //         defaultZoom={this.props.selectedLocation ? 12 : 8}\r\n        //         center={this.props.selectedLocation ? this.props.selectedLocation : {lat: 38.559547, lng: 68.757950}}\r\n        //         defaultCenter={{ lat: this.state.defaultZoomLat ? this.state.defaultZoomLat : 38.559547, lng: this.state.defaultZoomLng ? this.state.defaultZoomLng : 68.757950 }}\r\n        //     >\r\n        //         {markers}\r\n        //     </GoogleMap>));\r\n\r\n        return (\r\n            <div>\r\n                <MyMapComponent\r\n                    selectedLocation={this.props.selectedLocation}\r\n                    defaultZoomLat={this.state.defaultZoomLat}\r\n                    defaultZoomLng={this.state.defaultZoomLng}\r\n                    markers={markers}\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAuHu6uhb9F2sLYrup2eydm_rwxKloUYEU\"\r\n                    loadingElement={<div style={{ height: `100%` }} />}\r\n                    containerElement={<div className=\"MyMapComponent\" />}\r\n                    mapElement={<div style={{ height: `100%` }} />}\r\n                />\r\n                <EventDetailDialog\r\n                    showDialog={this.state.showDialog}\r\n                    photoUrl={this.state.photoUrl}\r\n                    onCLose={this.handleDialogClose}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onMarkerClick = (props) => {\r\n        const selectedLng = props.latLng.lng();\r\n        const selectedLat = props.latLng.lat();\r\n\r\n        this.setState({\r\n            selectedPlace: props,\r\n            showingInfoWindow: true,\r\n            selectedLng,\r\n            selectedLat\r\n        });\r\n    };\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDialogClose() {\r\n        this.setState({\r\n            showDialog: false\r\n        })\r\n    }\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class About extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      open: false\r\n    }\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    })\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" size=\"small\" color=\"secondary\" className={'about-us-btn'} onClick={this.handleClickOpen}>\r\n          о нас\r\n        </Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            <p className=\"logo\">\r\n              <span>\r\n                <span className=\"green\">Clean</span> City\r\n              </span>\r\n            </p>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Чистый город — платформа для решения экологических проблем. <br />\r\n              — мы платформа донесения информации и не несём ответственности за чистоту и экологию <br />\r\n              — данные которые отправляют пользователи полностью на добровольной основе <br />\r\n              — мы не собираем конфиденциальных данных\r\n              <br />\r\n              Мы за чистый город!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Закрыть\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './events.css';\r\nimport About from '../About/About';\r\n\r\nclass Events extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      eventID: -1\r\n    }\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle(index, event) {\r\n    this.setState({\r\n      eventID: index\r\n    }, () => {\r\n      this.props.onEventClick(event)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const eventItems = this.props.eventItems && this.props.eventItems.length > 0 ?\r\n      this.props.eventItems.map((item, index) => {\r\n        return (\r\n          <li className=\"item\" key={index}>\r\n            <a href=\"#\"\r\n              onClick={() => this.toggle(index, item)}\r\n              className={`event ${\r\n                this.state.eventID === index ? \"active\" : \"\"\r\n                }`} >\r\n              <p className={`comment ${this.state.eventID === index ? \"show\" : \"\"}`}>{item.comment}</p>\r\n\r\n              {\r\n                this.state.eventID === index ?\r\n                  <img src={item.image_link} className=\"event-img\" alt=\"event-img\" /> :\r\n                  <div className=\"img-preview-content\">\r\n                    <img src={item.image_link} className=\"event-img\" alt=\"event-img\" />\r\n                  </div>\r\n              }\r\n            </a>\r\n          </li>\r\n        );\r\n      }) : <></>\r\n\r\n    return (\r\n      <div className=\"Events\">\r\n        <div className=\"header\">\r\n          <h2 className=\"logo\">\r\n            <span>\r\n              <span className=\"green\">Clean</span> City\r\n            </span>\r\n\r\n            <About />\r\n          </h2>\r\n        </div>\r\n        <div className=\"events\">\r\n          <ul className=\"event-items\">\r\n            {eventItems}\r\n          </ul>\r\n        </div>\r\n        <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n          {this.props.pagination}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleImageClick(file_link) {\r\n\r\n  }\r\n}\r\n\r\nexport default Events;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Button, CircularProgress} from \"@material-ui/core\";\r\nimport { Camera } from \"@material-ui/icons\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Axios from \"axios\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {compress, compressAccurately} from 'image-conversion';\r\n\r\nclass AddEventDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            district: \"Somoni\",\r\n            comment: null,\r\n            lat: null,\r\n            lng: null,\r\n            photoLoaded: false,\r\n            selectOpen: false,\r\n            photo: null,\r\n            errorToasterOpen: false,\r\n            successToasterOpen: false,\r\n            loading: false\r\n        };\r\n\r\n        this.handleCameraChange = this.handleCameraChange.bind(this);\r\n        this.handleLocation = this.handleLocation.bind(this);\r\n        this.handleSendClick = this.handleSendClick.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.props.handleAddEventClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Что-то портит вашу экологию?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Проявите социальную ответственность - сфотографируйте и отправьте нам.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Комментарий\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        multiline\r\n                        onChange={this.handleCommentChange}\r\n                    />\r\n\r\n                    <Grid container style={{ marginTop: \"5px\" }}>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <InputLabel >Фотография</InputLabel>\r\n                            <input type=\"file\"\r\n                                accept=\"image/jpg,image/png/image/gif\"\r\n                                capture=\"camera\"\r\n                                id={\"camera-photo\"}\r\n                                style={{ display: \"none\", marginTop: \"2px\" }}\r\n                                ref={cameraFile => this.cameraFile = cameraFile}\r\n                                onChange={this.handleCameraChange} />\r\n                            <Button\r\n                                style={{ display: this.state.photoLoaded && \"none\", }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={() => this.cameraFile.click()}\r\n                                startIcon={<Camera />}\r\n                            >\r\n                                Сфотографировать\r\n                            </Button>\r\n                            <Button\r\n                                style={{ display: !this.state.photoLoaded && \"none\" }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<CheckIcon />}\r\n                            >\r\n                                Загружено\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} className=\"region-grid\">\r\n                            <InputLabel id=\"demo-controlled-open-select-label\" style={{ marginRight: \"37px\" }}>Район</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-controlled-open-select-label\"\r\n                                id=\"demo-controlled-open-select\"\r\n                                open={this.state.selectOpen}\r\n                                onClose={this.handleSelectClose}\r\n                                onOpen={this.handleSelectOpen}\r\n                                value={this.state.district}\r\n                                onChange={this.handleSelectChange}\r\n                            >\r\n                                <MenuItem value={\"Sino\"}>Сино</MenuItem>\r\n                                <MenuItem value={\"Firdavsi\"}>Фирдавси</MenuItem>\r\n                                <MenuItem value={\"Somoni\"}>Сомони</MenuItem>\r\n                                <MenuItem value={\"Shohmansur\"}>Шохмансур</MenuItem>\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.onClose} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    {!this.state.loading ?\r\n                        <Button onClick={this.handleSendClick} color=\"primary\">\r\n                            Отправить\r\n                        </Button>\r\n                        :\r\n                        <CircularProgress size={14} />\r\n                    }\r\n\r\n                </DialogActions>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.errorToasterOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorToasterCLose}\r\n                    message=\"Whoops...\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={this.handleErrorToasterCLose}>\r\n                                Отменить\r\n                            </Button>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleErrorToasterCLose}>\r\n                                Ошибка!\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.successToasterOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSucessToasterCLose}\r\n                    message=\"Success\"\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={this.handleSuccessToasterCLose}>\r\n                                UNDO\r\n                            </Button>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"primary\" onClick={this.handleSuccessToasterCLose}>\r\n                                Success\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    handleErrorToasterCLose = (event, reason) => {\r\n        this.setState({\r\n            errorToasterOpen: false\r\n        })\r\n    };\r\n\r\n\r\n    handleCameraChange(event) {\r\n        const fileName = event.target.files[0].name;\r\n       compressAccurately(event.target.files[0], 80).then(res => {\r\n           res.name = fileName;\r\n            this.setState({\r\n                photo: res\r\n            }, () => {\r\n                this.setState({\r\n                    photoLoaded: true\r\n                })\r\n            })\r\n        });\r\n        // const photo = event.target.files[0];\r\n\r\n    }\r\n\r\n    handleSendClick() {\r\n        if (!navigator.geolocation.getCurrentPosition(this.handleLocation)) {\r\n            console.log(\"Пожалуйста, предоставьте свои геоданные \")\r\n            // this.setState({\r\n            //     errorToasterOpen: true\r\n            // })\r\n        };\r\n    }\r\n\r\n    handleLocation(position) {\r\n        this.setState({\r\n            loading: true,\r\n            lng: position.coords.longitude,\r\n            lat: position.coords.latitude\r\n        }, () => {\r\n            this.send()\r\n        })\r\n    }\r\n\r\n\r\n    send() {\r\n        if (this.state.comment && this.state.district && this.state.photo) {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", this.state.photo, this.state.photo.name);\r\n            formData.append(\"long\", this.state.lng);\r\n            formData.append(\"lat\", this.state.lat);\r\n            formData.append(\"comment\", this.state.comment);\r\n            formData.append(\"district\", this.state.district);\r\n\r\n            Axios.post(\"https://cleancity.foodstan.tj/api/create_app\", formData).then(resp => {\r\n                this.setState({\r\n                    successToasterOpen: true\r\n                }, () => {\r\n                    window.location.reload();\r\n                })\r\n            }).catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    loading: false,\r\n                    errorToasterOpen: true\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCommentChange = (event) => {\r\n        this.setState({\r\n            comment: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectClose = () => {\r\n        this.setState({\r\n            selectOpen: false\r\n        })\r\n    }\r\n\r\n    handleSelectOpen = () => {\r\n        this.setState({\r\n            selectOpen: true\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (event) => {\r\n        this.setState({\r\n            district: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSuccessToasterCLose = (event) => {\r\n        this.setState({\r\n            successToasterOpen: false\r\n        })\r\n    }\r\n}\r\n\r\nexport default AddEventDialog;","import React from 'react';\r\nimport './App.css';\r\nimport Map from \"./app/components/Map\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Events from './app/components/Events/Events';\r\nimport AddEventDialog from \"./app/components/AddEventDialog\";\r\nimport Axios from \"axios\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      offline: false,\r\n      selectedLocation: null,\r\n      photo: null,\r\n      addEventDialogOpen: false,\r\n      applications: null,\r\n      paginationObject: null,\r\n      selectedApplicationId: null\r\n    };\r\n\r\n    this.onEventClick = this.onEventClick.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApplications(null);\r\n  }\r\n\r\n  getApplications = (pageNumber) => {\r\n    let backendUrl = \"https://cleancity.foodstan.tj/api/get_apps\";\r\n    if (pageNumber){backendUrl = backendUrl + \"?page=\" + pageNumber}\r\n\r\n    let urlString = window.location.href;\r\n    let urlStaged = urlString.replace('/', '');\r\n    let url = new URL(urlStaged);\r\n\r\n    const id = url.searchParams.get('id');\r\n    const sign = pageNumber ? \"&\" : \"?\";\r\n    if (id){backendUrl = backendUrl + sign + \"id=\" + id}\r\n\r\n    Axios.get(backendUrl).then(resp => {\r\n      this.setState({\r\n        paginationObject: resp.data,\r\n        applications: resp.data.data\r\n      }, () => {\r\n        if (pageNumber) {\r\n          window.history.pushState(null, '',  window.location.pathname);\r\n          return;\r\n        }\r\n        let urlString = window.location.href;\r\n        let urlStaged = urlString.replace('/', '');\r\n        let url = new URL(urlStaged);\r\n\r\n        const id = url.searchParams.get('id');\r\n        const applications = this.state.applications;\r\n        let selectedPosition = null;\r\n\r\n        for (let i = 0; i < applications.length; i++) {\r\n          if (applications[i].id === id) {\r\n            selectedPosition = applications[i]\r\n          }\r\n        }\r\n        if (selectedPosition) {\r\n          this.setState({\r\n            selectedLocation: {lat: selectedPosition.lat, lng: selectedPosition.long}\r\n          })\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({\r\n      addEventDialogOpen: true\r\n    })\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      addEventDialogOpen: false\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const eventItems = this.state.applications;\r\n    const paginationComponent = this.state.paginationObject &&\r\n        <Pagination\r\n        data={this.state.paginationObject.data}\r\n        activePage={this.state.paginationObject.current_page}\r\n        itemsCountPerPage={10}\r\n        totalItemsCount={this.state.paginationObject.total}\r\n        pageRangeDisplayed={5}\r\n        itemClass=\"page-item\"\r\n        linkClass=\"page-link\"\r\n        onChange={this.getApplications}/>;\r\n        \r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Header /> */}\r\n        <Grid container>\r\n          <Grid item xs={12} md={4} xl={3}>\r\n            <Events eventItems={eventItems} onEventClick={this.onEventClick} pagination={paginationComponent}/>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} xl={9}>\r\n            <Map selectedLocation={this.state.selectedLocation} locations={eventItems} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <IconButton\r\n          color=\"secondary\"\r\n          onClick={this.handleOpen}\r\n          variant=\"primary\"\r\n          className=\"add-photo-button\"\r\n          aria-label=\"add a photo\">\r\n          <PhotoCamera />\r\n        </IconButton>\r\n        <AddEventDialog open={this.state.addEventDialogOpen} onClose={this.handleClose}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  onEventClick(event){\r\n    this.setState({\r\n      selectedPlace: event,\r\n      selectedLocation: {lat: event.lat, lng: event.long}\r\n    }, () => {\r\n      if ('URLSearchParams' in window) {\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(\"id\", event.id);\r\n        const newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\r\n        window.history.pushState(null, '', newRelativePathQuery);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}